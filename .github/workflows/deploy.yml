name: Kryptic Tha Don Beats App CI/CD Pipeline
# This workflow is triggered on pushes to the 'develop' branch
# It builds a Docker image, scans it for vulnerabilities using Trivy,
# and deploys it to an EKS cluster if the scan passes.
on:
  push:
    branches: [develop]
  pull_request:
    branches: [main]
    
env:
  ORG_NAME: mdulearning
  REPO_NAME : krypticthadonbeats-dev

jobs:
  Build:
    permissions:
      security-events: write
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Authenticate to the container registry
    - name: Login to Dockerhub container registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        
    - name: Build and push Docker image 
      run: |
          echo "Navigating to the application directory"
          cd application
          ls 
          echo "Building and tagging the image with REPO_NAME = ${{ env.REPO_NAME }} & image_tag = ${{ github.sha }}"
          docker build -t ${{ env.REPO_NAME }}:${{ github.sha }} .
           # Tag the Docker image for the Amazon ECR repository using the same GitHub commit SHA
          docker tag ${{ env.REPO_NAME }}:${{ github.sha }} ${{ env.ORG_NAME }}/${{ env.REPO_NAME }}:${{ github.sha }}
          # Push the Docker image to the Amazon ECR repository
          echo "Pushing to ${{ env.ORG_NAME }} registry"
          docker push ${{ env.ORG_NAME }}/${{ env.REPO_NAME }}:${{ github.sha }}

  Container_Scanning:
    runs-on: ubuntu-latest
    needs: build

    steps:

      - name: Set Up Docker Scout
        run: | 
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
          sh install-scout.sh

    # Authenticate to the container registry
      - name: Login to Dockerhub container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Full CVE scan
        run: |
          docker scout cves ${{ env.ORG_NAME }}/${{ env.REPO_NAME }}:${{ github.sha }}

      - name: Quickview Scan w/fail conditions 
        run: | 
          docker scout quickview ${{ env.ORG_NAME }}/${{ env.REPO_NAME }}:${{ github.sha }} \
            --only-severity critical \
            --exit-code 1